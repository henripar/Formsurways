{"version":3,"sources":["formimage.png","Frontpage.js","App.js","reportWebVitals.js","index.js"],"names":["Frontpage","props","history","useHistory","className","class","onClick","push","src","formImage","alt","to","PieChart","myRef","useRef","useEffect","answerarray","data","answer","map","alreadyExists","filter","selected","value","options","length","count","index","indexOf","svg","d3","current","width","attr","height","g","append","color","pie","sort","d","path","outerRadius","innerRadius","label","radius","pies","selectAll","enter","centroid","text","ref","Answers","id","useParams","useState","header","setHeader","answers","setAnswers","axios","get","process","params","url","then","formdata","console","log","answerObject","question","answerr","SubmitButton","post","questions","setUrl","changeRoute","AnswersSubmitted","Submitted","showCopied","setShowcopied","showCopied2","setShowcopied2","aria-label","navigator","clipboard","writeText","setTimeout","xmlns","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","x","y","rx","ry","x1","y1","x2","y2","points","FormReady","setQuestions","urlParam","option","i","htmlFor","type","qs","handleRadioClick","name","placeholder","onChange","e","preventDefault","qis","target","handleTyping","OptionQuestion","setOptions","readOnly","disabled","handleOptionChange","QuestionType","concat","setQuestionType","App","questionType","exact","form","headerChange","handleChangeOnMultipleInput","Math","random","addOption","handleChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.781b8831.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/formimage.c91428e7.png\";","import React, {\n    useState, useEffect, useRef\n  } from 'react';\n  import './Frontpage.css';\n\n  import {\n    useHistory,\n    useParams,\n    BrowserRouter as Router,\n    Switch, Route, Link\n  } from \"react-router-dom\";\n\nimport formImage from './formimage.png';\n\nconst Frontpage = (props) => {\n    const history = useHistory();\n    return(\n        <div className=\"main-container\">\n            <header>\n                <h1 className=\"logo-big\">Form<span className=\"logo-small\">survway</span></h1>\n            </header>\n            <div className=\"main-content\">\n        <div className=\"left-content\">\n            <h1 className=\"white-header\">Create free <span class=\"surveys-text\">surveys</span></h1>\n            <h1 className=\"white-header\">and collect data!</h1>\n            <button className=\"create-button\" onClick={() => history.push('/')}>Create survey</button>\n        </div>\n        <div className=\"right-content\">\n            <img className=\"image\" src={formImage} alt=\"\"/>\n        </div>\n            </div>\n            <footer>\n                <p>Easily get the answers you need.</p>\n                <Link className=\"linkki no-margin\" to=\"/\">{\"Start now.\"}</Link>\n                <p className=\"light-blue\">Form<span className=\"logo-small\">survway</span></p>\n            </footer>\n        </div>\n    )\n}\nexport default Frontpage;","\nimport React, {\n  useState, useEffect, useRef\n} from 'react';\nimport {\n  useHistory,\n  useParams,\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\";\nimport './App.css';\nimport axios from 'axios';\nimport * as d3 from 'd3';\n\nimport Frontpage from \"./Frontpage.js\";\n\nconst PieChart = (props) => {\n  let myRef = useRef();\n\n  useEffect(() => {\n\n    let answerarray = [];\n    props.data.answer.map(answer => {\n      let alreadyExists = answerarray.filter(selected => selected.value === props.data.options[answer])\n\n      if (answerarray.length < 1) {\n        answerarray.push({ value: props.data.options[answer], count: 1 })\n      } else if (alreadyExists[0]) {\n        let index = answerarray.indexOf(alreadyExists[0]);\n\n        answerarray[index].count += 1;\n      } else {\n        answerarray.push({ value: props.data.options[answer], count: 1 })\n      }\n    })\n    const data = answerarray;\n    const svg = d3.select(myRef.current);\n    const width = svg.attr('width');\n    const height = svg.attr('height');\n    const radius = 200;\n\n\n\n    const g = svg.append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n    const color = d3.scaleOrdinal([\"#cfe1f2\", \"#b5d4e9\", \"#93c3df\", \"#6daed5\", \"#4b97c9\", \"#2f7ebc\", \"#1864aa\", \"#0a4a90\", \"#08306b\"]);\n\n    const pie = d3.pie().sort(null).value(d => d.count);\n\n    const path = d3.arc().outerRadius(radius).innerRadius(0);\n\n    const label = d3.arc().outerRadius(radius).innerRadius(radius - 30);\n\n    const pies = g.selectAll('.arc').data(pie(data)).enter().append('g').attr('class', 'arc');\n    pies.append('path').attr('d', path).attr('fill', d => color(d.data.value));\n\n    pies.append('text')\n      .attr('transform', function (d) {\n        return `translate(${label.centroid(d)})`;\n      })\n      .text(d => { return d.data.value + \" \" + d.data.count })\n\n  }, [])\n\n  return (\n    <div>\n      <svg ref={myRef} width=\"400\" height=\"400\"></svg>\n    </div>\n  )\n\n\n}\n\nconst Answers = (props) => {\n  let { id } = useParams();\n  const [header, setHeader] = useState('');\n  const [answers, setAnswers] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/forms/getFormAnswers`, {\n      params: {\n        url: id\n      }\n    }).then((formdata) => {\n      console.log(formdata.data);\n      setHeader(formdata.data.header);\n      setAnswers(formdata.data.answers);\n    })\n  }, [])\n\n  return (\n\n    <div className=\"App\">\n\n      <h1 className=\"survey-header\">{header}</h1>\n      {\n\n        answers.length !== 0 ?\n          answers.map((answerObject) => {\n            return !answerObject.options ?\n              (\n                <div className=\"answer-container\">\n                  <h2>{answerObject.question}</h2>\n                  {answerObject.answer.map(answerr => {\n                    return (\n                      <p className=\"single-answer\" key={answerr}>{answerr}</p>\n                    )\n                  })}\n                </div>\n              ) :\n              (\n                <div>\n                  <h2>{answerObject.question}</h2>\n                  <PieChart data={answerObject}></PieChart>\n                </div>\n              )\n          }\n\n          ) :\n          (\n            <h1 className=\"survey-header\">You dont have any responses yet! </h1>\n          )\n      }\n    </div>\n  )\n}\n\nconst SubmitButton = (props) => {\n\n  const history = useHistory();\n  const changeRoute = (url) => {\n    console.log(url)\n    props.setUrl(url);\n    history.push('/submitted/' + url);\n  }\n\n  return (\n    <div>\n      <button className=\"submit-button\" onClick={() => { axios.post(`${process.env.REACT_APP_API_URL}/forms/newForm`, { questions: props.questions, header: props.header }).then((url) => changeRoute(url.data)) }} > Submit </button>\n    </div>\n  )\n}\n\nconst AnswersSubmitted = (props) => {\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"survey-header\">Thanks for answering our survey!</h1>\n\n    </div>\n  )\n}\n\n\nconst Submitted = (props) => {\n  const history = useHistory('');\n  const [showCopied, setShowcopied] = useState(false);\n  const [showCopied2, setShowcopied2] = useState(false);\n\n  const share = (url) => {\n    navigator.clipboard.writeText(`https://henripar.github.io/Formsurway/form/${url}`);\n    setShowcopied(true);\n    setTimeout((() => {\n      setShowcopied(false);\n    }), 3000)\n  }\n\n  const seeResults = (url) => {\n    navigator.clipboard.writeText(`${process.env.PUBLIC_URL}/answers/${url}`);\n    setShowcopied2(true);\n    setTimeout((() => {\n      setShowcopied2(false);\n    }), 3000)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"center-text\">\n        <h1>Your survey has been created!</h1>\n        <p>Share your survey and see the answers.</p>\n\n        <p>You can now share your survey by sharing this link:\n     </p>\n        <div className=\"link-container\">\n          {showCopied == true ?\n            (\n\n              <p>Link Copied!</p>\n\n            ) :\n\n            <p>{'https://henripar.github.io/Formsurway/form/' + props.url}</p>\n\n          }\n\n\n          <svg aria-label=\"Copy link\" onClick={() => { share(props.url) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-copy\"><title>Copy link!</title><rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path></svg>\n        </div>\n\n        {/* <Link to={'/form/' + props.url}>{'http://localhost:3000/form/' + props.url}</Link> */}\n        <p>You can see the survey results by following this link: </p>\n\n        <div className=\"link-container\">\n          {showCopied2 == true ?\n            (\n\n              <p>Link Copied!</p>\n\n            ) :\n\n            <p>{'https://henripar.github.io/Formsurway/answers/' + props.url}</p>\n\n          }\n\n          <svg onClick={() => { seeResults(props.url) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-copy\"><title>Copy link!</title><rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path></svg>\n\n          <svg onClick={() => history.push('/answers/' + props.url)} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\" className=\"arrow\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst FormReady = (props) => {\n  let { id } = useParams();\n  const history = useHistory();\n  const [questions, setQuestions] = useState([]);\n  const [header, setHeader] = useState('')\n  const [answers, setAnswers] = useState([{}]);\n\n  const handleTyping = (e, index, question) => {\n    e.preventDefault();\n    console.log(index, question, e)\n    let qis = questions;\n    qis[index] = { question: question, answer: e.target.value };\n    setAnswers(qis);\n  }\n\n  const submitAnswers = () => {\n    axios.post(`${process.env.REACT_APP_API_URL}/forms/newAnswers`, {\n      answers,\n      url: id\n    }).then(() => { history.push(\"/answered\") })\n  }\n\n  const handleRadioClick = (index, i, option) => {\n    let qs = questions;\n    qs[index].question = option;\n    qs[index].answer = i;\n    setAnswers(qs);\n  }\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/forms/getForm`, {\n      params: {\n        urlParam: id\n      }\n    }).then((formdata) => {\n      console.log(formdata.data);\n      setQuestions(formdata.data.questions);\n      setHeader(formdata.data.header);\n      setAnswers(formdata.data.questions);\n    })\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"survey-header\">{header}</h1>\n      <form id=\"form-answers\">\n        {\n          questions.map((question, index) => {\n            return question.value ?\n              (\n                <div key={question.value}>\n                  <p>{question.value}</p>\n                  {question.options.map((option, i) => {\n                    return (\n                      <div key={option}>\n                        <label htmlFor={option}>\n                          <input type=\"radio\" value={option} id={option} onClick={() => { handleRadioClick(index, i, question.value) }} name={question.value} />\n                          {option}\n                        </label>\n                      </div>\n                    )\n                  })}\n                </div>\n              ) :\n              (\n                <div key={question}>\n                  <label htmlFor={question}> {question}  </label>\n                  <input className=\"answer-form-input\" id={question} placeholder=\"Your answer..\" onChange={(e) => { handleTyping(e, index, question) }} type=\"text\" />\n\n                </div>\n              )\n\n          }\n          )\n        }\n        <button className=\"submit-button\" type=\"button\" onClick={submitAnswers}>Submit</button>\n      </form>\n    </div>\n  )\n}\n\n\nconst OptionQuestion = (props) => {\n  const [options, setOptions] = useState('')\n  const handleOptionChange = (e, index, i) => {\n    console.log(i, index, e)\n    e.preventDefault();\n    let qs = props.questions;\n    qs[index].options[i] = e.target.value;\n    props.setQuestions(qs);\n    setOptions(e.target.value);\n  }\n  return (\n    <div className=\"option-div\" key={props.option.value}>\n      <input readOnly name=\"hep\" type=\"radio\" disabled />\n      <input type=\"text\" name={options} value={options} onChange={(e) => handleOptionChange(e, props.index, props.i)} placeholder={\"Option \" + (props.i + 1)} />\n\n    </div>\n  )\n}\nconst QuestionType = (props) => {\n  const addText = () => {\n    props.setQuestions(props.questions.concat(\"\"));\n    props.setQuestionType(true);\n  }\n  const addMultipleChoice = () => {\n    props.setQuestions(props.questions.concat({ value: \"\", options: [\"\", \"\"] }));\n    props.setQuestionType(true);\n  }\n  return (\n    <div className=\"button-question-menu-container\">\n      <button className=\"button-main\" onClick={addText}>Text</button>\n      <button className=\"button-main\" onClick={addMultipleChoice}>Multiple Choice</button>\n    </div>\n  )\n}\n\n\n\nfunction App() {\n  const [questions, setQuestions] = useState([{ header: \"\" }])\n  const [header, setHeader] = useState('');\n  const [questionType, setQuestionType] = useState(true);\n  const [url, setUrl] = useState('');\n\n  const history = useHistory();\n\n  const selectType = () => {\n    setQuestionType(false);\n  }\n\n  const handleChange = (e, index) => {\n    let qs = questions;\n    qs[index] = e.target.value;\n    setQuestions(qs);\n  }\n  const handleChangeOnMultipleInput = (e, index) => {\n    let qs = questions;\n    qs[index] = { value: e.target.value, options: [{ value: \"\" }] };\n    setQuestions(qs);\n  }\n\n  const addOption = (index, e) => {\n    setQuestionType(Math.random());\n    console.log(index)\n    let qs = questions;\n    qs[index].options.push('');\n    setQuestions(qs);\n  }\n\n  const headerChange = (e) => {\n    setHeader(e.target.value);\n  }\n\n  return (\n\n    <Router>\n      <Switch>\n        <Route path=\"/submitted/:id\">\n          <header>\n            <h1 className=\"logo-big\">Form<span className=\"logo-small\">survway</span></h1>\n          </header>\n          <Submitted url={url} />\n        </Route>\n        <Route path=\"/answers/:id\">\n          <header>\n            <h1 className=\"logo-big\">Form<span className=\"logo-small\">survway</span></h1>\n          </header>\n          <Answers />\n        </Route>\n        <Route exact path=\"/answered\">\n          <header>\n            <h1 className=\"logo-big\">Form<span className=\"logo-small\">survway</span></h1>\n          </header>\n          <AnswersSubmitted />\n        </Route>\n        <Route path=\"/form/:id\">\n          <header>\n            <h1 className=\"logo-big\">Form<span className=\"logo-small\">survway</span></h1>\n          </header>\n          <FormReady />\n        </Route>\n        <Route path=\"/frontpage\">\n          <Frontpage></Frontpage>\n        </Route>\n        <Route exact path=\"/\">\n          <header>\n            <h1 className=\"logo-big\">Form<span className=\"logo-small\">survway</span></h1>\n          </header>\n          <div className=\"App\" >\n            <form id=\"userform\" >\n              <input className=\"form-name-input\" type=\"text\" name=\"header\" form=\"userform\" placeholder=\"Form name\" onChange={(e) => { headerChange(e) }} />\n              {\n                questions.map((question, index) => {\n                  return (\n                    question.options ?\n                      (<\n                        div key={\n                          index\n                        } >\n                        <\n                          input name={\n                            index\n                          }\n                          type=\"text\"\n                          onChange={\n                            (e) => handleChangeOnMultipleInput(e, index)\n                          }\n                          className=\"question-input\"\n                          placeholder=\"Question\"\n\n                        />\n                        {question.options.map((option, i) => {\n                          return (\n                            <div key={i}>\n                              <OptionQuestion questions={questions} setQuestions={setQuestions} index={index} i={i} option={option} />\n                            </div>)\n\n                        })}\n                        <button className=\"addoption-button\" type=\"button\" onClick={(e) => { addOption(index, e) }}> + Add option</button>\n                      </div>\n                      ) :\n                      (<\n                        div key={\n                          index\n                        } >\n                        <\n                          input className=\"text-input\" name={\n                            index\n                          }\n                          placeholder=\"Question\"\n                          type=\"text\"\n                          onChange={\n                            (e) => handleChange(e, index)\n                          }\n                          value={\n                            question.value\n                          }\n                        />\n\n                      </div >\n                      ))\n                })\n\n              }  </form>\n\n            {questionType ?\n              <div className=\"add-button-container\">\n                <button className=\"button-main\" onClick={\n                  selectType\n                } > + New Question </button>\n              </div>\n              :\n              <QuestionType questions={questions} setQuestions={setQuestions} setQuestionType={setQuestionType}></QuestionType>\n\n            }\n\n            <SubmitButton setUrl={setUrl} history={history} header={header} questions={questions} />\n\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}